!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("MyLib",[],t):"object"==typeof exports?exports.MyLib=t():e.MyLib=t()}(self,(()=>(()=>{"use strict";var e={959:function(e,t,n){var r=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}},i=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.assets_load=t.assets_texture=t.assets_image=t.assets_program=void 0;var a=n(524),u={programs:{},images:{},textures:{}};function c(e){return u.images[e]}t.assets_program=function(e){return u.programs[e]},t.assets_image=c,t.assets_texture=function(e){return u.textures[e]};var s={programs:function(e,t){return r(void 0,void 0,void 0,(function(){return o(this,(function(n){return[2,a.program_create.apply(void 0,i([t],e,!1))]}))}))},images:function(e){return r(void 0,void 0,void 0,(function(){return o(this,(function(t){return[2,(0,a.image_create)(e)]}))}))},textures:function(e,t){return r(void 0,void 0,void 0,(function(){return o(this,(function(n){return[2,(0,a.texture_create)(t,c(e))]}))}))}};t.assets_load=function(e,t){return r(this,void 0,void 0,(function(){var n,r,i,a,c,l,f,d,p,h,_,v;return o(this,(function(o){switch(o.label){case 0:for(i in r=[],n=e)r.push(i);a=0,o.label=1;case 1:if(!(a<r.length))return[3,6];if(!((i=r[a])in n))return[3,5];l=0,f=e[c=i],o.label=2;case 2:return l<f.length?(d=f[l],p=d[0],h=d[1],_=u[c],v=p,[4,s[c](h,t)]):[3,5];case 3:_[v]=o.sent(),o.label=4;case 4:return l++,[3,2];case 5:return a++,[3,1];case 6:return[2]}}))}))}},114:(e,t)=>{function n(e,t,n){e.width=t,e.height=n,e.style.width="".concat(t,"px"),e.style.height="".concat(n,"px")}Object.defineProperty(t,"__esModule",{value:!0}),t.canvas_create=t.canvas_resize=void 0,t.canvas_resize=n,t.canvas_create=function(e,t){void 0===e&&(e=300),void 0===t&&(t=150);var r=document.createElement("canvas");return n(r,e,t),r}},151:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.context_get_webgl2=void 0,t.context_get_webgl2=function(e){var t=e.getContext("webgl2");if(!t)throw new Error("Could not create webgl2 context");return t}},61:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.image_create=void 0,t.image_create=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){return[2,new Promise((function(t){var n=new Image;n.onload=function(){return t(n)},n.src=e}))]}))}))}},524:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(114),t),o(n(151),t),o(n(61),t),o(n(675),t),o(n(920),t),o(n(655),t),o(n(522),t),o(n(69),t)},675:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};function o(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,fetch(e)];case 1:return[4,t.sent().text()];case 2:return[2,t.sent()]}}))}))}function i(e,t,n){var r=e.createShader(n);if(!r)throw new Error("Could not create shader of type: ".concat(n));if(e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS))throw new Error("".concat(e.getShaderInfoLog(r)));return r}Object.defineProperty(t,"__esModule",{value:!0}),t.program_uniform_location=t.program_create=void 0,t.program_create=function(e,t,a){return n(this,void 0,void 0,(function(){var n,u,c,s,l;return r(this,(function(r){switch(r.label){case 0:if(!(n=e.createProgram()))throw new Error("Could not create shader program");return[4,o(t)];case 1:return u=r.sent(),[4,o(a)];case 2:if(c=r.sent(),s=i(e,u,e.VERTEX_SHADER),l=i(e,c,e.FRAGMENT_SHADER),e.attachShader(n,s),e.attachShader(n,l),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))throw new Error("".concat(e.getProgramInfoLog(n)));return e.deleteShader(s),e.deleteShader(l),[2,n]}}))}))},t.program_uniform_location=function(e,t,n){var r=e.getUniformLocation(t,n);if(!r)throw new Error("Could not find uniform location for name: ".concat(n));return r}},920:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.spritesheet_create=void 0,t.spritesheet_create=function(e,t,n,r){for(var o=(void 0===r?{shrink:0}:r).shrink,i=[],a=0;a<t[0]/n[0]*(t[1]/n[1]);a++){var u=t[0]/n[0],c=a%u*n[0],s=Math.floor(a/u)*n[1];i.push.apply(i,[c/t[0]+o,s/t[1]+o,(c+n[0])/t[0]-o,s/t[1]+o,(c+n[0])/t[0]-o,(s+n[1])/t[1]-o,c/t[0]+o,(s+n[1])/t[1]-o])}return{texture:e,source_size:t,sprite_size:n,texcoords:i}}},655:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.texture_create=void 0,t.texture_create=function(e,t){var n=e.createTexture();if(!n)throw new Error("Could not create texture");e.bindTexture(e.TEXTURE_2D,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.generateMipmap(e.TEXTURE_2D);var r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");if(r){var o=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT);e.texParameterf(e.TEXTURE_2D,r.TEXTURE_MAX_ANISOTROPY_EXT,o)}return e.bindTexture(e.TEXTURE_2D,null),n}},522:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vao_create=void 0,t.vao_create=function(e,t,n,r){var o=e.createVertexArray();if(!o)throw new Error("Could not create vertex array object");return e.bindVertexArray(o),e.useProgram(t),r.forEach((function(r){var o=r.buffer_index,i=r.location,a=r.size,u=r.stride,c=r.offset;e.bindBuffer(n[o][0],n[o][1]);var s=e.getAttribLocation(t,i);e.vertexAttribPointer(s,a,e.FLOAT,!1,u,c),e.enableVertexAttribArray(s)})),n.filter((function(t){return t[0]===e.ELEMENT_ARRAY_BUFFER})).forEach((function(t){e.bindBuffer(t[0],t[1])})),e.bindVertexArray(null),o}},69:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vbo_create=void 0,t.vbo_create=function(e,t,n,r){void 0===r&&(r=WebGLRenderingContext.STATIC_DRAW);var o=e.createBuffer();if(!o)throw new Error("Could not create buffer");return e.bindBuffer(t,o),e.bufferData(t,n,r),[t,o]}},156:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},a=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.gg_engine_start=t.gg_engine_preload=t.gl=t.canvas=void 0;var u=n(959),c=n(524),s=n(788);function l(e,t){(0,c.canvas_resize)(e,document.body.clientWidth,document.body.clientHeight),t.viewport(0,0,e.width,e.height)}o(n(524),t),o(n(788),t),o(n(959),t),t.canvas=(0,c.canvas_create)(),(0,s.input_create)(t.canvas,!1),t.gl=(0,c.context_get_webgl2)(t.canvas),window.onresize=function(){return l(t.canvas,t.gl)},l(t.canvas,t.gl),document.body.appendChild(t.canvas),t.gg_engine_preload=function(e){return i(this,void 0,void 0,(function(){return a(this,(function(n){switch(n.label){case 0:return[4,(0,u.assets_load)(e,t.gl)];case 1:return n.sent(),[2]}}))}))},t.gg_engine_start=function(e,n){var r=0,o=0;window.requestAnimationFrame((function i(a){window.requestAnimationFrame(i),e(),function(e){o++,e-r>1e3&&(console.log(o),o=0,r=e),t.gl.clearColor(0,0,1,1),t.gl.clear(t.gl.COLOR_BUFFER_BIT),n()}(a)}))}},788:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.input_mouse_position=t.input_mouse=t.input_key=t.input_create=void 0;var o={mouse:{locked:!1,x:-1,y:-1,buttons:[!1,!1,!1]},keyboard:{keys:[]}};t.input_create=function(e,t){e.oncontextmenu=function(e){return e.preventDefault()},e.onclick=function(){return function(e,t){t&&n(this,void 0,void 0,(function(){return r(this,(function(t){return[2,e.requestPointerLock()]}))}))}(e,t)},e.onmousedown=function(e){return function(e){o.mouse.buttons[e.button]=!0}(e)},e.onmouseup=function(e){return function(e){o.mouse.buttons[e.button]=!1}(e)},e.onmousemove=function(e){return function(e){o.mouse.x=e.clientX,o.mouse.y=e.clientY}(e)},document.body.onkeydown=function(e){return function(e){o.keyboard.keys.includes(e.key)||o.keyboard.keys.push(e.key)}(e)},document.body.onkeyup=function(e){return function(e){o.keyboard.keys.splice(o.keyboard.keys.indexOf(e.key),1)}(e)}},t.input_key=function(e){return o.keyboard.keys.includes(e)},t.input_mouse=function(e){return o.mouse.buttons[e]},t.input_mouse_position=function(){return[o.mouse.x,o.mouse.y]}}},t={};return function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}(156)})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxFQUFNQyxNQUFNM0UsRUFDdkMsQyxHQzFFSXVHLEVBQTJCLENBQUMsRSxPQUdoQyxTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCRSxJQUFqQkQsRUFDSCxPQUFPQSxFQUFhdkwsUUFHckIsSUFBSUMsRUFBU21MLEVBQXlCRSxHQUFZLENBR2pEdEwsUUFBUyxDQUFDLEdBT1gsT0FIQXlMLEVBQW9CSCxHQUFVSSxLQUFLekwsRUFBT0QsUUFBU0MsRUFBUUEsRUFBT0QsUUFBU3FMLEdBR3BFcEwsRUFBT0QsT0FDZixDQ25CMEJxTCxDQUFvQixJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vTXlMaWIvd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovL015TGliLy4vc3JjL2Fzc2V0cy50cyIsIndlYnBhY2s6Ly9NeUxpYi8uL3NyYy9ncmFwaGljcy9jYW52YXMudHMiLCJ3ZWJwYWNrOi8vTXlMaWIvLi9zcmMvZ3JhcGhpY3MvY29udGV4dC50cyIsIndlYnBhY2s6Ly9NeUxpYi8uL3NyYy9ncmFwaGljcy9pbWFnZS50cyIsIndlYnBhY2s6Ly9NeUxpYi8uL3NyYy9ncmFwaGljcy9pbmRleC50cyIsIndlYnBhY2s6Ly9NeUxpYi8uL3NyYy9ncmFwaGljcy9zaGFkZXIudHMiLCJ3ZWJwYWNrOi8vTXlMaWIvLi9zcmMvZ3JhcGhpY3Mvc3ByaXRlc2hlZXQudHMiLCJ3ZWJwYWNrOi8vTXlMaWIvLi9zcmMvZ3JhcGhpY3MvdGV4dHVyZS50cyIsIndlYnBhY2s6Ly9NeUxpYi8uL3NyYy9ncmFwaGljcy92YW8udHMiLCJ3ZWJwYWNrOi8vTXlMaWIvLi9zcmMvZ3JhcGhpY3MvdmJvLnRzIiwid2VicGFjazovL015TGliLy4vc3JjL2luZGV4LnRzIiwid2VicGFjazovL015TGliLy4vc3JjL2lucHV0LnRzIiwid2VicGFjazovL015TGliL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL015TGliL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShcIk15TGliXCIsIFtdLCBmYWN0b3J5KTtcblx0ZWxzZSBpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpXG5cdFx0ZXhwb3J0c1tcIk15TGliXCJdID0gZmFjdG9yeSgpO1xuXHRlbHNlXG5cdFx0cm9vdFtcIk15TGliXCJdID0gZmFjdG9yeSgpO1xufSkoc2VsZiwgKCkgPT4ge1xucmV0dXJuICIsImltcG9ydCB7IGltYWdlX2NyZWF0ZSwgcHJvZ3JhbV9jcmVhdGUsIHRleHR1cmVfY3JlYXRlIH0gZnJvbSBcIi4vZ3JhcGhpY3NcIlxuXG50eXBlIEluZGV4YWJsZU9iamVjdDxUPiA9IHsgW2luZGV4OiBzdHJpbmddOiBUIH1cblxudHlwZSBBc3NldHMgPSB7XG4gICAgcHJvZ3JhbXM6IEluZGV4YWJsZU9iamVjdDxXZWJHTFByb2dyYW0+XG4gICAgaW1hZ2VzOiBJbmRleGFibGVPYmplY3Q8SFRNTEltYWdlRWxlbWVudD5cbiAgICB0ZXh0dXJlczogSW5kZXhhYmxlT2JqZWN0PFdlYkdMVGV4dHVyZT5cbn1cblxudHlwZSBBc3NldHNLZXkgPSBrZXlvZiBBc3NldHM7XG50eXBlIEFzc2V0c1ZhbHVlcyA9IGtleW9mIHR5cGVvZiBhc3NldHM7XG5cbnR5cGUgQXNzZXRQYXlsb2FkPFQ+ID0gW3N0cmluZywgVF07XG5cbmV4cG9ydCB0eXBlIFByb2dyYW1QYXlsb2FkID0gW3N0cmluZywgc3RyaW5nXTtcbmV4cG9ydCB0eXBlIEltYWdlUGF5bG9hZCA9IHN0cmluZztcbmV4cG9ydCB0eXBlIFRleHR1cmVQYXlsb2FkID0gc3RyaW5nO1xuXG5leHBvcnQgdHlwZSBBc3NldHNQYXlsb2FkID0ge1xuICAgIHByb2dyYW1zPzogQXNzZXRQYXlsb2FkPFByb2dyYW1QYXlsb2FkPltdXG4gICAgaW1hZ2VzPzogQXNzZXRQYXlsb2FkPEltYWdlUGF5bG9hZD5bXVxuICAgIHRleHR1cmVzPzogQXNzZXRQYXlsb2FkPFRleHR1cmVQYXlsb2FkPltdXG59XG5cbmNvbnN0IGFzc2V0czogQXNzZXRzID0ge1xuICAgIHByb2dyYW1zOiB7IH0sXG4gICAgaW1hZ2VzOiB7IH0sXG4gICAgdGV4dHVyZXM6IHsgfSxcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0c19wcm9ncmFtKGluZGV4OiBzdHJpbmcpIHtcbiAgICByZXR1cm4gYXNzZXRzLnByb2dyYW1zW2luZGV4XTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzc2V0c19pbWFnZShpbmRleDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIGFzc2V0cy5pbWFnZXNbaW5kZXhdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXNzZXRzX3RleHR1cmUoaW5kZXg6IHN0cmluZykge1xuICAgIHJldHVybiBhc3NldHMudGV4dHVyZXNbaW5kZXhdO1xufVxuXG50eXBlIEFzc2V0TG9hZGVycyA9IHsgW0tleSBpbiBBc3NldHNLZXldOiAoZGF0YTogUHJvZ3JhbVBheWxvYWQgJiBJbWFnZVBheWxvYWQsIGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSA9PiBQcm9taXNlPHR5cGVvZiBhc3NldHNbS2V5XVtBc3NldHNWYWx1ZXNdPiB9XG5cbmNvbnN0IGxvYWRlcnM6IEFzc2V0TG9hZGVycyA9IHtcbiAgICBwcm9ncmFtczogYXN5bmMgKGRhdGE6IFByb2dyYW1QYXlsb2FkLCBnbDogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCkgPT4gcHJvZ3JhbV9jcmVhdGUoZ2wsIC4uLmRhdGEpLFxuICAgIGltYWdlczogYXN5bmMgKGRhdGE6IEltYWdlUGF5bG9hZCkgPT4gaW1hZ2VfY3JlYXRlKGRhdGEpLFxuICAgIHRleHR1cmVzOiBhc3luYyAoZGF0YTogVGV4dHVyZVBheWxvYWQsIGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSA9PiB0ZXh0dXJlX2NyZWF0ZShnbCwgYXNzZXRzX2ltYWdlKGRhdGEpKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXNzZXRzX2xvYWQoYXNzZXRzX3BheWxvYWQ6IEFzc2V0c1BheWxvYWQsIGdsOiBXZWJHTDJSZW5kZXJpbmdDb250ZXh0KSB7XG4gICAgZm9yIChjb25zdCBrZXkgaW4gYXNzZXRzX3BheWxvYWQpIHtcbiAgICAgICAgZm9yIChjb25zdCBwYXlsb2FkIG9mIGFzc2V0c19wYXlsb2FkW2tleSBhcyBBc3NldHNLZXldISkge1xuICAgICAgICAgICAgY29uc3QgW2luZGV4LCBkYXRhXSA9IHBheWxvYWQ7XG5cbiAgICAgICAgICAgIGFzc2V0c1trZXkgYXMgQXNzZXRzS2V5XVtpbmRleF0gPSBhd2FpdCBsb2FkZXJzW2tleSBhcyBBc3NldHNLZXldKGRhdGEgYXMgYW55LCBnbCk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJleHBvcnQgZnVuY3Rpb24gY2FudmFzX3Jlc2l6ZShjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LCB3aWR0aDogbnVtYmVyLCBoZWlnaHQ6IG51bWJlcikge1xuICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XG4gICAgY2FudmFzLnN0eWxlLndpZHRoID0gYCR7d2lkdGh9cHhgO1xuICAgIGNhbnZhcy5zdHlsZS5oZWlnaHQgPSBgJHtoZWlnaHR9cHhgO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FudmFzX2NyZWF0ZSh3aWR0aDogbnVtYmVyID0gMzAwLCBoZWlnaHQ6IG51bWJlciA9IDE1MCk6IEhUTUxDYW52YXNFbGVtZW50IHtcbiAgICBjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xuICAgIGNhbnZhc19yZXNpemUoY2FudmFzLCB3aWR0aCwgaGVpZ2h0KTtcbiAgICByZXR1cm4gY2FudmFzO1xufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIGNvbnRleHRfZ2V0X3dlYmdsMihjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KTogV2ViR0wyUmVuZGVyaW5nQ29udGV4dCB7XG4gICAgY29uc3QgZ2wgPSBjYW52YXMuZ2V0Q29udGV4dChcIndlYmdsMlwiKTtcbiAgICBpZiAoIWdsKSB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgY3JlYXRlIHdlYmdsMiBjb250ZXh0XCIpO1xuICAgIHJldHVybiBnbDtcbn1cbiIsImV4cG9ydCBhc3luYyBmdW5jdGlvbiBpbWFnZV9jcmVhdGUoc291cmNlX3VybDogc3RyaW5nKTogUHJvbWlzZTxIVE1MSW1hZ2VFbGVtZW50PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBjb25zdCBpbWFnZSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKGltYWdlKTtcbiAgICAgICAgaW1hZ2Uuc3JjID0gc291cmNlX3VybDtcbiAgICB9KTtcbn1cbiIsImV4cG9ydCAqIGZyb20gXCIuL2NhbnZhc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9jb250ZXh0XCJcbmV4cG9ydCAqIGZyb20gXCIuL2ltYWdlXCJcbmV4cG9ydCAqIGZyb20gXCIuL3NoYWRlclwiXG5leHBvcnQgKiBmcm9tIFwiLi9zcHJpdGVzaGVldFwiXG5leHBvcnQgKiBmcm9tIFwiLi90ZXh0dXJlXCJcbmV4cG9ydCAqIGZyb20gXCIuL3Zhb1wiXG5leHBvcnQgKiBmcm9tIFwiLi92Ym9cIiIsInR5cGUgU2hhZGVyVHlwZSA9IFdlYkdMUmVuZGVyaW5nQ29udGV4dFtcIlZFUlRFWF9TSEFERVJcIl0gfCBXZWJHTFJlbmRlcmluZ0NvbnRleHRbXCJGUkFHTUVOVF9TSEFERVJcIl07XG5cbmFzeW5jIGZ1bmN0aW9uIGxvYWRfZmlsZSh1cmw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsKTtcbiAgICByZXR1cm4gYXdhaXQgcmVzLnRleHQoKTtcbn1cblxuZnVuY3Rpb24gc2hhZGVyX2NvbXBpbGVfZnJvbV9zb3VyY2UoXG4gICAgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dCxcbiAgICBzb3VyY2U6IHN0cmluZyxcbiAgICB0eXBlOiBTaGFkZXJUeXBlXG4pOiBXZWJHTFNoYWRlciB7XG4gICAgY29uc3Qgc2hhZGVyID0gZ2wuY3JlYXRlU2hhZGVyKHR5cGUpO1xuICAgIGlmICghc2hhZGVyKSB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBjcmVhdGUgc2hhZGVyIG9mIHR5cGU6ICR7dHlwZX1gKTtcblxuICAgIGdsLnNoYWRlclNvdXJjZShzaGFkZXIsIHNvdXJjZSk7XG4gICAgZ2wuY29tcGlsZVNoYWRlcihzaGFkZXIpO1xuXG4gICAgaWYgKCFnbC5nZXRTaGFkZXJQYXJhbWV0ZXIoc2hhZGVyLCBnbC5DT01QSUxFX1NUQVRVUykpIHRocm93IG5ldyBFcnJvcihgJHtnbC5nZXRTaGFkZXJJbmZvTG9nKHNoYWRlcil9YCk7XG4gICAgcmV0dXJuIHNoYWRlcjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2dyYW1fY3JlYXRlKFxuICAgIGdsOiBXZWJHTFJlbmRlcmluZ0NvbnRleHQsXG4gICAgdmVydGV4X3NvdXJjZV91cmw6IHN0cmluZyxcbiAgICBmcmFnbWVudF9zb3VyY2VfdXJsOiBzdHJpbmdcbik6IFByb21pc2U8V2ViR0xQcm9ncmFtPiB7XG4gICAgY29uc3QgcHJvZ3JhbSA9IGdsLmNyZWF0ZVByb2dyYW0oKTtcbiAgICBpZiAoIXByb2dyYW0pIHRocm93IG5ldyBFcnJvcihcIkNvdWxkIG5vdCBjcmVhdGUgc2hhZGVyIHByb2dyYW1cIik7XG4gICAgY29uc3QgdmVydGV4X3NvdXJjZSA9IGF3YWl0IGxvYWRfZmlsZSh2ZXJ0ZXhfc291cmNlX3VybCk7XG4gICAgY29uc3QgZnJhZ21lbnRfc291cmNlID0gYXdhaXQgbG9hZF9maWxlKGZyYWdtZW50X3NvdXJjZV91cmwpO1xuICAgIGNvbnN0IHZlcnRleF9zaGFkZXIgPSBzaGFkZXJfY29tcGlsZV9mcm9tX3NvdXJjZShnbCwgdmVydGV4X3NvdXJjZSwgZ2wuVkVSVEVYX1NIQURFUik7XG4gICAgY29uc3QgZnJhZ21lbnRfc2hhZGVyID0gc2hhZGVyX2NvbXBpbGVfZnJvbV9zb3VyY2UoZ2wsIGZyYWdtZW50X3NvdXJjZSwgZ2wuRlJBR01FTlRfU0hBREVSKTtcblxuICAgIGdsLmF0dGFjaFNoYWRlcihwcm9ncmFtLCB2ZXJ0ZXhfc2hhZGVyKTtcbiAgICBnbC5hdHRhY2hTaGFkZXIocHJvZ3JhbSwgZnJhZ21lbnRfc2hhZGVyKTtcbiAgICBnbC5saW5rUHJvZ3JhbShwcm9ncmFtKTtcblxuICAgIGlmICghZ2wuZ2V0UHJvZ3JhbVBhcmFtZXRlcihwcm9ncmFtLCBnbC5MSU5LX1NUQVRVUykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke2dsLmdldFByb2dyYW1JbmZvTG9nKHByb2dyYW0pfWApO1xuICAgIH1cblxuICAgIGdsLmRlbGV0ZVNoYWRlcih2ZXJ0ZXhfc2hhZGVyKTtcbiAgICBnbC5kZWxldGVTaGFkZXIoZnJhZ21lbnRfc2hhZGVyKTtcbiAgICByZXR1cm4gcHJvZ3JhbTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHByb2dyYW1fdW5pZm9ybV9sb2NhdGlvbihnbDogV2ViR0xSZW5kZXJpbmdDb250ZXh0LCBwcm9ncmFtOiBXZWJHTFByb2dyYW0sIG5hbWU6IHN0cmluZyk6IFdlYkdMVW5pZm9ybUxvY2F0aW9uIHtcbiAgICBjb25zdCBsb2NhdGlvbiA9IGdsLmdldFVuaWZvcm1Mb2NhdGlvbihwcm9ncmFtLCBuYW1lKTtcbiAgICBpZiAoIWxvY2F0aW9uKSB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBmaW5kIHVuaWZvcm0gbG9jYXRpb24gZm9yIG5hbWU6ICR7bmFtZX1gKTtcbiAgICByZXR1cm4gbG9jYXRpb247XG59XG4iLCIvLyBUT0RPOiBzdG9yZSBhcyB2Ym8gaW5zdGVhZCBvZiB0ZXhjb29yZHM/XG5leHBvcnQgdHlwZSBTcHJpdGVzaGVldCA9IHtcbiAgICB0ZXh0dXJlOiBXZWJHTFRleHR1cmVcbiAgICBzb3VyY2Vfc2l6ZTogW251bWJlciwgbnVtYmVyXVxuICAgIHNwcml0ZV9zaXplOiBbbnVtYmVyLCBudW1iZXJdXG4gICAgdGV4Y29vcmRzOiBudW1iZXJbXVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3ByaXRlc2hlZXRfY3JlYXRlKFxuICAgIHRleHR1cmU6IFdlYkdMVGV4dHVyZSxcbiAgICBzb3VyY2Vfc2l6ZTogW251bWJlciwgbnVtYmVyXSxcbiAgICBzcHJpdGVfc2l6ZTogW251bWJlciwgbnVtYmVyXSxcbiAgICB7IHNocmluayB9OiB7IHNocmluazogbnVtYmVyIH0gPSB7IHNocmluazogMCB9XG4pOiBTcHJpdGVzaGVldCB7XG4gICAgY29uc3QgdGV4Y29vcmRzID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8ICgoc291cmNlX3NpemVbMF0gLyBzcHJpdGVfc2l6ZVswXSkgKiAoc291cmNlX3NpemVbMV0gLyBzcHJpdGVfc2l6ZVsxXSkpOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29sdW1uID0gc291cmNlX3NpemVbMF0gLyBzcHJpdGVfc2l6ZVswXTtcbiAgICAgICAgY29uc3QgeCA9IChpICUgY29sdW1uKSAqIHNwcml0ZV9zaXplWzBdLCB5ID0gTWF0aC5mbG9vcihpIC8gY29sdW1uKSAqIHNwcml0ZV9zaXplWzFdO1xuXG4gICAgICAgIHRleGNvb3Jkcy5wdXNoKC4uLltcbiAgICAgICAgICAgIHggLyBzb3VyY2Vfc2l6ZVswXSArIHNocmluaywgeSAvIHNvdXJjZV9zaXplWzFdICsgc2hyaW5rLFxuICAgICAgICAgICAgKHggKyBzcHJpdGVfc2l6ZVswXSkgLyBzb3VyY2Vfc2l6ZVswXSAtIHNocmluaywgeSAvIHNvdXJjZV9zaXplWzFdICsgc2hyaW5rLFxuICAgICAgICAgICAgKHggKyBzcHJpdGVfc2l6ZVswXSkgLyBzb3VyY2Vfc2l6ZVswXSAtIHNocmluaywgKHkgKyBzcHJpdGVfc2l6ZVsxXSkgLyBzb3VyY2Vfc2l6ZVsxXSAtIHNocmluayxcbiAgICAgICAgICAgIHggLyBzb3VyY2Vfc2l6ZVswXSArIHNocmluaywgKHkgKyBzcHJpdGVfc2l6ZVsxXSkgLyBzb3VyY2Vfc2l6ZVsxXSAtIHNocmlua1xuICAgICAgICBdKVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHRleHR1cmUsXG4gICAgICAgIHNvdXJjZV9zaXplLFxuICAgICAgICBzcHJpdGVfc2l6ZSxcbiAgICAgICAgdGV4Y29vcmRzXG4gICAgfVxufVxuIiwiZXhwb3J0IGZ1bmN0aW9uIHRleHR1cmVfY3JlYXRlKGdsOiBXZWJHTFJlbmRlcmluZ0NvbnRleHQsIGltYWdlOiBIVE1MSW1hZ2VFbGVtZW50KTogV2ViR0xUZXh0dXJlIHtcbiAgICBjb25zdCB0ZXh0dXJlID0gZ2wuY3JlYXRlVGV4dHVyZSgpO1xuICAgIGlmICghdGV4dHVyZSkgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGNyZWF0ZSB0ZXh0dXJlXCIpO1xuICAgIGdsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIHRleHR1cmUpO1xuXG4gICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX1dSQVBfUywgZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX1dSQVBfVCwgZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgZ2wudGV4UGFyYW1ldGVyaShnbC5URVhUVVJFXzJELCBnbC5URVhUVVJFX01JTl9GSUxURVIsIGdsLk5FQVJFU1QpO1xuICAgIGdsLnRleFBhcmFtZXRlcmkoZ2wuVEVYVFVSRV8yRCwgZ2wuVEVYVFVSRV9NQUdfRklMVEVSLCBnbC5ORUFSRVNUKTtcblxuICAgIGdsLnRleEltYWdlMkQoZ2wuVEVYVFVSRV8yRCwgMCwgZ2wuUkdCQSwgZ2wuUkdCQSwgZ2wuVU5TSUdORURfQllURSwgaW1hZ2UpO1xuICAgIGdsLmdlbmVyYXRlTWlwbWFwKGdsLlRFWFRVUkVfMkQpO1xuXG4gICAgY29uc3QgZXh0ID1cbiAgICAgICAgZ2wuZ2V0RXh0ZW5zaW9uKFwiRVhUX3RleHR1cmVfZmlsdGVyX2FuaXNvdHJvcGljXCIpIHx8XG4gICAgICAgIGdsLmdldEV4dGVuc2lvbihcIk1PWl9FWFRfdGV4dHVyZV9maWx0ZXJfYW5pc290cm9waWNcIikgfHxcbiAgICAgICAgZ2wuZ2V0RXh0ZW5zaW9uKFwiV0VCS0lUX0VYVF90ZXh0dXJlX2ZpbHRlcl9hbmlzb3Ryb3BpY1wiKTtcblxuICAgIGlmIChleHQpIHtcbiAgICAgICAgY29uc3QgbWF4ID0gZ2wuZ2V0UGFyYW1ldGVyKGV4dC5NQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQpO1xuICAgICAgICBnbC50ZXhQYXJhbWV0ZXJmKGdsLlRFWFRVUkVfMkQsIGV4dC5URVhUVVJFX01BWF9BTklTT1RST1BZX0VYVCwgbWF4KTtcbiAgICB9XG5cbiAgICBnbC5iaW5kVGV4dHVyZShnbC5URVhUVVJFXzJELCBudWxsKTtcbiAgICByZXR1cm4gdGV4dHVyZTtcbn0iLCJpbXBvcnQgeyBUYXJnZXQgfSBmcm9tIFwiLi92Ym9cIjtcblxuZXhwb3J0IHR5cGUgQXR0cmlidXRlID0ge1xuICAgIGxvY2F0aW9uOiBzdHJpbmdcbiAgICBzaXplOiBudW1iZXJcbiAgICBzdHJpZGU6IG51bWJlclxuICAgIG9mZnNldDogbnVtYmVyXG4gICAgYnVmZmVyX2luZGV4OiBudW1iZXJcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHZhb19jcmVhdGUoXG4gICAgZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQsXG4gICAgcHJvZ3JhbTogV2ViR0xQcm9ncmFtLFxuICAgIHZib3M6IFtUYXJnZXQsIFdlYkdMQnVmZmVyXVtdLFxuICAgIGF0dHJpYnV0ZXM6IEF0dHJpYnV0ZVtdXG4pOiBXZWJHTFZlcnRleEFycmF5T2JqZWN0IHtcbiAgICBjb25zdCB2YW8gPSBnbC5jcmVhdGVWZXJ0ZXhBcnJheSgpO1xuICAgIGlmICghdmFvKSB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgY3JlYXRlIHZlcnRleCBhcnJheSBvYmplY3RcIik7XG4gICAgZ2wuYmluZFZlcnRleEFycmF5KHZhbyk7XG4gICAgZ2wudXNlUHJvZ3JhbShwcm9ncmFtKTtcblxuICAgIGF0dHJpYnV0ZXMuZm9yRWFjaCgoeyBidWZmZXJfaW5kZXgsIGxvY2F0aW9uLCBzaXplLCBzdHJpZGUsIG9mZnNldCB9KSA9PiB7XG4gICAgICAgIGdsLmJpbmRCdWZmZXIodmJvc1tidWZmZXJfaW5kZXhdWzBdLCB2Ym9zW2J1ZmZlcl9pbmRleF1bMV0pO1xuICAgICAgICBjb25zdCBpbmRleCA9IGdsLmdldEF0dHJpYkxvY2F0aW9uKHByb2dyYW0sIGxvY2F0aW9uKTtcbiAgICAgICAgZ2wudmVydGV4QXR0cmliUG9pbnRlcihpbmRleCwgc2l6ZSwgZ2wuRkxPQVQsIGZhbHNlLCBzdHJpZGUsIG9mZnNldCk7XG4gICAgICAgIGdsLmVuYWJsZVZlcnRleEF0dHJpYkFycmF5KGluZGV4KTtcbiAgICB9KTtcblxuICAgIHZib3MuZmlsdGVyKHZibyA9PiB2Ym9bMF0gPT09IGdsLkVMRU1FTlRfQVJSQVlfQlVGRkVSKVxuICAgICAgICAuZm9yRWFjaCh2Ym8gPT4ge1xuICAgICAgICAgICAgZ2wuYmluZEJ1ZmZlcih2Ym9bMF0sIHZib1sxXSk7XG4gICAgICAgIH0pO1xuXG4gICAgZ2wuYmluZFZlcnRleEFycmF5KG51bGwpO1xuICAgIHJldHVybiB2YW87XG59XG4iLCJleHBvcnQgdHlwZSBUYXJnZXQgPSBXZWJHTFJlbmRlcmluZ0NvbnRleHRbXCJBUlJBWV9CVUZGRVJcIl0gfCBXZWJHTFJlbmRlcmluZ0NvbnRleHRbXCJFTEVNRU5UX0FSUkFZX0JVRkZFUlwiXTtcbmV4cG9ydCB0eXBlIFVzYWdlID0gV2ViR0xSZW5kZXJpbmdDb250ZXh0W1wiU1RBVElDX0RSQVdcIl0gfCBXZWJHTFJlbmRlcmluZ0NvbnRleHRbXCJEWU5BTUlDX0RSQVdcIl1cblxuZXhwb3J0IGZ1bmN0aW9uIHZib19jcmVhdGUoXG4gICAgZ2w6IFdlYkdMUmVuZGVyaW5nQ29udGV4dCxcbiAgICB0YXJnZXQ6IFRhcmdldCxcbiAgICBkYXRhOiBBcnJheUJ1ZmZlcixcbiAgICB1c2FnZTogVXNhZ2UgPSBXZWJHTFJlbmRlcmluZ0NvbnRleHRbXCJTVEFUSUNfRFJBV1wiXVxuKTogW1RhcmdldCwgV2ViR0xCdWZmZXJdIHtcbiAgICBjb25zdCB2Ym8gPSBnbC5jcmVhdGVCdWZmZXIoKTtcbiAgICBpZiAoIXZibykgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGNyZWF0ZSBidWZmZXJcIik7XG4gICAgZ2wuYmluZEJ1ZmZlcih0YXJnZXQsIHZibyk7XG4gICAgZ2wuYnVmZmVyRGF0YSh0YXJnZXQsIGRhdGEsIHVzYWdlKTtcbiAgICByZXR1cm4gW3RhcmdldCwgdmJvXTtcbn1cblxuIiwiaW1wb3J0IHsgQXNzZXRzUGF5bG9hZCwgYXNzZXRzX2xvYWQgfSBmcm9tIFwiLi9hc3NldHNcIjtcbmltcG9ydCB7IGNhbnZhc19jcmVhdGUsIGNhbnZhc19yZXNpemUsIGNvbnRleHRfZ2V0X3dlYmdsMiB9IGZyb20gXCIuL2dyYXBoaWNzXCI7XG5pbXBvcnQgeyBpbnB1dF9jcmVhdGUgfSBmcm9tIFwiLi9pbnB1dFwiO1xuXG5leHBvcnQgKiBmcm9tIFwiLi9ncmFwaGljc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9pbnB1dFwiXG5leHBvcnQgKiBmcm9tIFwiLi9hc3NldHNcIlxuXG5mdW5jdGlvbiBvbl9yZXNpemUoY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCwgZ2w6IFdlYkdMMlJlbmRlcmluZ0NvbnRleHQpIHtcbiAgICBjYW52YXNfcmVzaXplKGNhbnZhcywgZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCwgZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQpO1xuICAgIGdsLnZpZXdwb3J0KDAsIDAsIGNhbnZhcy53aWR0aCwgY2FudmFzLmhlaWdodCk7XG59XG5cbmV4cG9ydCBjb25zdCBjYW52YXMgPSBjYW52YXNfY3JlYXRlKCk7XG5pbnB1dF9jcmVhdGUoY2FudmFzLCBmYWxzZSlcbmV4cG9ydCBjb25zdCBnbCA9IGNvbnRleHRfZ2V0X3dlYmdsMihjYW52YXMpO1xuXG53aW5kb3cub25yZXNpemUgPSAoKSA9PiBvbl9yZXNpemUoY2FudmFzLCBnbCk7XG5vbl9yZXNpemUoY2FudmFzLCBnbCk7XG5cbmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY2FudmFzKTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdnX2VuZ2luZV9wcmVsb2FkKGFzc2V0c19wYXlsb2FkOiBBc3NldHNQYXlsb2FkKSB7XG4gICAgYXdhaXQgYXNzZXRzX2xvYWQoYXNzZXRzX3BheWxvYWQsIGdsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdnX2VuZ2luZV9zdGFydCh0aWNrOiAoKSA9PiB2b2lkLCByZW5kZXI6ICgpID0+IHZvaWQpIHtcbiAgICBsZXQgcHJldl90aWNrOiBudW1iZXIgPSAwO1xuICAgIGxldCBwcmV2X3NlY29uZDogbnVtYmVyID0gMDtcbiAgICBsZXQgZnBzID0gMDtcblxuICAgIGZ1bmN0aW9uIGludGVybmFsX3RpY2sobm93OiBudW1iZXIpIHtcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShpbnRlcm5hbF90aWNrKTtcbiAgICAgICAgdGljaygpO1xuICAgICAgICBpbnRlcm5hbF9yZW5kZXIobm93KTtcbiAgICAgICAgcHJldl90aWNrID0gbm93O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGludGVybmFsX3JlbmRlcihub3c6IG51bWJlcikge1xuICAgICAgICBmcHMrKztcbiAgICAgICAgaWYgKG5vdyAtIHByZXZfc2Vjb25kID4gMTAwMCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZnBzKTtcbiAgICAgICAgICAgIGZwcyA9IDA7XG4gICAgICAgICAgICBwcmV2X3NlY29uZCA9IG5vdztcbiAgICAgICAgfVxuICAgICAgICBnbC5jbGVhckNvbG9yKDAuMCwgMC4wLCAxLjAsIDEuMCk7XG4gICAgICAgIGdsLmNsZWFyKGdsLkNPTE9SX0JVRkZFUl9CSVQpO1xuICAgICAgICByZW5kZXIoKTtcbiAgICB9XG5cbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGludGVybmFsX3RpY2spO1xufSIsImV4cG9ydCB0eXBlIEtleWJvYXJkID0ge1xuICAgIGtleXM6IEFycmF5PEtleWJvYXJkRXZlbnRbXCJrZXlcIl0+XG59XG5cbmV4cG9ydCB0eXBlIE1vdXNlID0ge1xuICAgIGxvY2tlZDogYm9vbGVhblxuICAgIHg6IG51bWJlclxuICAgIHk6IG51bWJlclxuICAgIGJ1dHRvbnM6IFtib29sZWFuLCBib29sZWFuLCBib29sZWFuXVxufVxuXG5leHBvcnQgdHlwZSBJbnB1dCA9IHtcbiAgICBrZXlib2FyZDogS2V5Ym9hcmRcbiAgICBtb3VzZTogTW91c2Vcbn1cblxuY29uc3QgaW5wdXQ6IElucHV0ID0ge1xuICAgIG1vdXNlOiB7XG4gICAgICAgIGxvY2tlZDogZmFsc2UsXG4gICAgICAgIHg6IC0xLFxuICAgICAgICB5OiAtMSxcbiAgICAgICAgYnV0dG9uczogW2ZhbHNlLCBmYWxzZSwgZmFsc2VdLFxuICAgIH0sXG4gICAga2V5Ym9hcmQ6IHtcbiAgICAgICAga2V5czogW11cbiAgICB9XG59O1xuXG5mdW5jdGlvbiBpbnB1dF9vbl9jbGljayhjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LCBwb2ludGVyX2xvY2s6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBpZiAocG9pbnRlcl9sb2NrKSAoYXN5bmMgKCkgPT4gY2FudmFzLnJlcXVlc3RQb2ludGVyTG9jaygpKSgpO1xufVxuXG5mdW5jdGlvbiBpbnB1dF9vbl9tb3VzZV9tb3ZlKGV2ZW50OiBNb3VzZUV2ZW50KTogdm9pZCB7XG4gICAgaW5wdXQubW91c2UueCA9IGV2ZW50LmNsaWVudFg7XG4gICAgaW5wdXQubW91c2UueSA9IGV2ZW50LmNsaWVudFk7XG59XG5cbmZ1bmN0aW9uIGlucHV0X29uX21vdXNlX2Rvd24oZXZlbnQ6IE1vdXNlRXZlbnQpOiB2b2lkIHtcbiAgICBpbnB1dC5tb3VzZS5idXR0b25zW2V2ZW50LmJ1dHRvbl0gPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBpbnB1dF9vbl9tb3VzZV91cChldmVudDogTW91c2VFdmVudCk6IHZvaWQge1xuICAgIGlucHV0Lm1vdXNlLmJ1dHRvbnNbZXZlbnQuYnV0dG9uXSA9IGZhbHNlO1xufVxuXG5mdW5jdGlvbiBpbnB1dF9vbl9rZXlfZG93bihldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQge1xuICAgIGlmICghaW5wdXQua2V5Ym9hcmQua2V5cy5pbmNsdWRlcyhldmVudC5rZXkpKSB7XG4gICAgICAgIGlucHV0LmtleWJvYXJkLmtleXMucHVzaChldmVudC5rZXkpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gaW5wdXRfb25fa2V5X3VwKGV2ZW50OiBLZXlib2FyZEV2ZW50KTogdm9pZCB7XG4gICAgaW5wdXQua2V5Ym9hcmQua2V5cy5zcGxpY2UoaW5wdXQua2V5Ym9hcmQua2V5cy5pbmRleE9mKGV2ZW50LmtleSksIDEpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRfY3JlYXRlKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQsIHBvaW50ZXJfbG9jazogYm9vbGVhbikge1xuICAgIGNhbnZhcy5vbmNvbnRleHRtZW51ID0gKGV2ZW50KSA9PiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNhbnZhcy5vbmNsaWNrID0gKCkgPT4gaW5wdXRfb25fY2xpY2soY2FudmFzLCBwb2ludGVyX2xvY2spO1xuICAgIGNhbnZhcy5vbm1vdXNlZG93biA9IChldmVudCkgPT4gaW5wdXRfb25fbW91c2VfZG93bihldmVudCk7XG4gICAgY2FudmFzLm9ubW91c2V1cCA9IChldmVudCkgPT4gaW5wdXRfb25fbW91c2VfdXAoZXZlbnQpO1xuICAgIGNhbnZhcy5vbm1vdXNlbW92ZSA9IChldmVudCkgPT4gaW5wdXRfb25fbW91c2VfbW92ZShldmVudCk7XG4gICAgZG9jdW1lbnQuYm9keS5vbmtleWRvd24gPSAoZXZlbnQpID0+IGlucHV0X29uX2tleV9kb3duKGV2ZW50KTtcbiAgICBkb2N1bWVudC5ib2R5Lm9ua2V5dXAgPSAoZXZlbnQpID0+IGlucHV0X29uX2tleV91cChldmVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpbnB1dF9rZXkoa2V5OiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaW5wdXQua2V5Ym9hcmQua2V5cy5pbmNsdWRlcyhrZXkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRfbW91c2UoYnV0dG9uOiBudW1iZXIpOiBib29sZWFuIHtcbiAgICByZXR1cm4gaW5wdXQubW91c2UuYnV0dG9uc1tidXR0b25dO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaW5wdXRfbW91c2VfcG9zaXRpb24oKTogW251bWJlciwgbnVtYmVyXSB7XG4gICAgcmV0dXJuIFtpbnB1dC5tb3VzZS54LCBpbnB1dC5tb3VzZS55XTtcbn0iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1Nik7XG4iXSwibmFtZXMiOlsicm9vdCIsImZhY3RvcnkiLCJleHBvcnRzIiwibW9kdWxlIiwiZGVmaW5lIiwiYW1kIiwic2VsZiIsImFzc2V0cyIsInByb2dyYW1zIiwiaW1hZ2VzIiwidGV4dHVyZXMiLCJhc3NldHNfaW1hZ2UiLCJpbmRleCIsImxvYWRlcnMiLCJkYXRhIiwiZ2wiLCJwcm9ncmFtX2NyZWF0ZSIsImltYWdlX2NyZWF0ZSIsInRleHR1cmVfY3JlYXRlIiwiYXNzZXRzX3BheWxvYWQiLCJwYXlsb2FkIiwia2V5IiwiY2FudmFzX3Jlc2l6ZSIsImNhbnZhcyIsIndpZHRoIiwiaGVpZ2h0Iiwic3R5bGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJnZXRDb250ZXh0IiwiRXJyb3IiLCJzb3VyY2VfdXJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJpbWFnZSIsIkltYWdlIiwib25sb2FkIiwic3JjIiwibG9hZF9maWxlIiwidXJsIiwiZmV0Y2giLCJ0ZXh0Iiwic2hhZGVyX2NvbXBpbGVfZnJvbV9zb3VyY2UiLCJzb3VyY2UiLCJ0eXBlIiwic2hhZGVyIiwiY3JlYXRlU2hhZGVyIiwic2hhZGVyU291cmNlIiwiY29tcGlsZVNoYWRlciIsImdldFNoYWRlclBhcmFtZXRlciIsIkNPTVBJTEVfU1RBVFVTIiwiZ2V0U2hhZGVySW5mb0xvZyIsInZlcnRleF9zb3VyY2VfdXJsIiwiZnJhZ21lbnRfc291cmNlX3VybCIsInByb2dyYW0iLCJjcmVhdGVQcm9ncmFtIiwidmVydGV4X3NvdXJjZSIsImZyYWdtZW50X3NvdXJjZSIsInZlcnRleF9zaGFkZXIiLCJWRVJURVhfU0hBREVSIiwiZnJhZ21lbnRfc2hhZGVyIiwiRlJBR01FTlRfU0hBREVSIiwiYXR0YWNoU2hhZGVyIiwibGlua1Byb2dyYW0iLCJnZXRQcm9ncmFtUGFyYW1ldGVyIiwiTElOS19TVEFUVVMiLCJnZXRQcm9ncmFtSW5mb0xvZyIsImRlbGV0ZVNoYWRlciIsIm5hbWUiLCJsb2NhdGlvbiIsImdldFVuaWZvcm1Mb2NhdGlvbiIsInRleHR1cmUiLCJzb3VyY2Vfc2l6ZSIsInNwcml0ZV9zaXplIiwic2hyaW5rIiwidGV4Y29vcmRzIiwiaSIsImNvbHVtbiIsIngiLCJ5IiwiTWF0aCIsImZsb29yIiwicHVzaCIsImNyZWF0ZVRleHR1cmUiLCJiaW5kVGV4dHVyZSIsIlRFWFRVUkVfMkQiLCJ0ZXhQYXJhbWV0ZXJpIiwiVEVYVFVSRV9XUkFQX1MiLCJDTEFNUF9UT19FREdFIiwiVEVYVFVSRV9XUkFQX1QiLCJURVhUVVJFX01JTl9GSUxURVIiLCJORUFSRVNUIiwiVEVYVFVSRV9NQUdfRklMVEVSIiwidGV4SW1hZ2UyRCIsIlJHQkEiLCJVTlNJR05FRF9CWVRFIiwiZ2VuZXJhdGVNaXBtYXAiLCJleHQiLCJnZXRFeHRlbnNpb24iLCJtYXgiLCJnZXRQYXJhbWV0ZXIiLCJNQVhfVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQiLCJ0ZXhQYXJhbWV0ZXJmIiwiVEVYVFVSRV9NQVhfQU5JU09UUk9QWV9FWFQiLCJ2Ym9zIiwiYXR0cmlidXRlcyIsInZhbyIsImNyZWF0ZVZlcnRleEFycmF5IiwiYmluZFZlcnRleEFycmF5IiwidXNlUHJvZ3JhbSIsImZvckVhY2giLCJidWZmZXJfaW5kZXgiLCJzaXplIiwic3RyaWRlIiwib2Zmc2V0IiwiYmluZEJ1ZmZlciIsImdldEF0dHJpYkxvY2F0aW9uIiwidmVydGV4QXR0cmliUG9pbnRlciIsIkZMT0FUIiwiZW5hYmxlVmVydGV4QXR0cmliQXJyYXkiLCJmaWx0ZXIiLCJ2Ym8iLCJFTEVNRU5UX0FSUkFZX0JVRkZFUiIsInRhcmdldCIsInVzYWdlIiwiV2ViR0xSZW5kZXJpbmdDb250ZXh0IiwiY3JlYXRlQnVmZmVyIiwiYnVmZmVyRGF0YSIsIm9uX3Jlc2l6ZSIsImJvZHkiLCJjbGllbnRXaWR0aCIsImNsaWVudEhlaWdodCIsInZpZXdwb3J0IiwiY2FudmFzX2NyZWF0ZSIsImlucHV0X2NyZWF0ZSIsImNvbnRleHRfZ2V0X3dlYmdsMiIsIndpbmRvdyIsIm9ucmVzaXplIiwiYXBwZW5kQ2hpbGQiLCJhc3NldHNfbG9hZCIsInRpY2siLCJyZW5kZXIiLCJwcmV2X3NlY29uZCIsImZwcyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImludGVybmFsX3RpY2siLCJub3ciLCJjb25zb2xlIiwibG9nIiwiY2xlYXJDb2xvciIsImNsZWFyIiwiQ09MT1JfQlVGRkVSX0JJVCIsImludGVybmFsX3JlbmRlciIsImlucHV0IiwibW91c2UiLCJsb2NrZWQiLCJidXR0b25zIiwia2V5Ym9hcmQiLCJrZXlzIiwicG9pbnRlcl9sb2NrIiwib25jb250ZXh0bWVudSIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJvbmNsaWNrIiwicmVxdWVzdFBvaW50ZXJMb2NrIiwiaW5wdXRfb25fY2xpY2siLCJvbm1vdXNlZG93biIsImJ1dHRvbiIsImlucHV0X29uX21vdXNlX2Rvd24iLCJvbm1vdXNldXAiLCJpbnB1dF9vbl9tb3VzZV91cCIsIm9ubW91c2Vtb3ZlIiwiY2xpZW50WCIsImNsaWVudFkiLCJpbnB1dF9vbl9tb3VzZV9tb3ZlIiwib25rZXlkb3duIiwiaW5jbHVkZXMiLCJpbnB1dF9vbl9rZXlfZG93biIsIm9ua2V5dXAiLCJzcGxpY2UiLCJpbmRleE9mIiwiaW5wdXRfb25fa2V5X3VwIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9