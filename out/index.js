!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("MyLib",[],t):"object"==typeof exports?exports.MyLib=t():e.MyLib=t()}(self,(()=>(()=>{"use strict";var e={114:(e,t)=>{function n(e,t,n){e.width=t,e.height=n,e.style.width="".concat(t,"px"),e.style.height="".concat(n,"px")}Object.defineProperty(t,"__esModule",{value:!0}),t.canvas_create=t.canvas_resize=void 0,t.canvas_resize=n,t.canvas_create=function(e,t){void 0===e&&(e=300),void 0===t&&(t=150);var r=document.createElement("canvas");return n(r,e,t),r}},151:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.context_get_webgl2=void 0,t.context_get_webgl2=function(e){var t=e.getContext("webgl2");if(!t)throw new Error("Could not create webgl2 context");return t}},61:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.image_create=void 0,t.image_create=function(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){return[2,new Promise((function(t){var n=new Image;n.onload=function(){return t(n)},n.src=e}))]}))}))}},524:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(114),t),o(n(151),t),o(n(61),t),o(n(675),t),o(n(920),t),o(n(655),t),o(n(522),t),o(n(69),t)},675:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};function o(e){return n(this,void 0,void 0,(function(){return r(this,(function(t){switch(t.label){case 0:return[4,fetch(e)];case 1:return[4,t.sent().text()];case 2:return[2,t.sent()]}}))}))}function i(e,t,n){var r=e.createShader(n);if(!r)throw new Error("Could not create shader of type: ".concat(n));if(e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS))throw new Error("".concat(e.getShaderInfoLog(r)));return r}Object.defineProperty(t,"__esModule",{value:!0}),t.program_uniform_location=t.program_create=void 0,t.program_create=function(e,t,a){return n(this,void 0,void 0,(function(){var n,u,c,f,l;return r(this,(function(r){switch(r.label){case 0:if(!(n=e.createProgram()))throw new Error("Could not create shader program");return[4,o(t)];case 1:return u=r.sent(),[4,o(a)];case 2:if(c=r.sent(),f=i(e,u,e.VERTEX_SHADER),l=i(e,c,e.FRAGMENT_SHADER),e.attachShader(n,f),e.attachShader(n,l),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))throw new Error("".concat(e.getProgramInfoLog(n)));return e.deleteShader(f),e.deleteShader(l),[2,n]}}))}))},t.program_uniform_location=function(e,t,n){var r=e.getUniformLocation(t,n);if(!r)throw new Error("Could not find uniform location for name: ".concat(n));return r}},920:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.spritesheet_create=void 0,t.spritesheet_create=function(e,t,n,r){for(var o=(void 0===r?{shrink:0}:r).shrink,i=[],a=0;a<t[0]/n[0]*(t[1]/n[1]);a++){var u=t[0]/n[0],c=a%u*n[0],f=Math.floor(a/u)*n[1];i.push.apply(i,[c/t[0]+o,f/t[1]+o,(c+n[0])/t[0]-o,f/t[1]+o,(c+n[0])/t[0]-o,(f+n[1])/t[1]-o,c/t[0]+o,(f+n[1])/t[1]-o])}return{texture:e,source_size:t,sprite_size:n,texcoords:i}}},655:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.texture_create=void 0,t.texture_create=function(e,t){var n=e.createTexture();if(!n)throw new Error("Could not create texture");e.bindTexture(e.TEXTURE_2D,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.generateMipmap(e.TEXTURE_2D);var r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");if(r){var o=e.getParameter(r.MAX_TEXTURE_MAX_ANISOTROPY_EXT);e.texParameterf(e.TEXTURE_2D,r.TEXTURE_MAX_ANISOTROPY_EXT,o)}return e.bindTexture(e.TEXTURE_2D,null),n}},522:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vao_create=void 0,t.vao_create=function(e,t,n,r){var o=e.createVertexArray();if(!o)throw new Error("Could not create vertex array object");return e.bindVertexArray(o),e.useProgram(t),r.forEach((function(r){var o=r.buffer_index,i=r.location,a=r.size,u=r.stride,c=r.offset;e.bindBuffer(n[o][0],n[o][1]);var f=e.getAttribLocation(t,i);e.vertexAttribPointer(f,a,e.FLOAT,!1,u,c),e.enableVertexAttribArray(f)})),n.filter((function(t){return t[0]===e.ELEMENT_ARRAY_BUFFER})).forEach((function(t){e.bindBuffer(t[0],t[1])})),e.bindVertexArray(null),o}},69:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vbo_create=void 0,t.vbo_create=function(e,t,n,r){void 0===r&&(r=WebGLRenderingContext.STATIC_DRAW);var o=e.createBuffer();if(!o)throw new Error("Could not create buffer");return e.bindBuffer(t,o),e.bufferData(t,n,r),[t,o]}},156:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.gg_engine_create=t.gl=t.canvas=void 0;var i=n(524),a=n(788);function u(e,t){(0,i.canvas_resize)(e,document.body.clientWidth,document.body.clientHeight),t.viewport(0,0,e.width,e.height)}o(n(524),t),o(n(788),t),t.canvas=(0,i.canvas_create)(),(0,a.input_create)(t.canvas,!1),t.gl=(0,i.context_get_webgl2)(t.canvas),window.onresize=function(){return u(t.canvas,t.gl)},u(t.canvas,t.gl),document.body.appendChild(t.canvas),t.gg_engine_create=function(e,n){var r=0,o=0;window.requestAnimationFrame((function i(a){window.requestAnimationFrame(i),e(),function(e){o++,e-r>1e3&&(console.log(o),o=0,r=e),t.gl.clearColor(0,0,1,1),t.gl.clear(t.gl.COLOR_BUFFER_BIT),n()}(a)}))}},788:function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{c(r.next(e))}catch(e){i(e)}}function u(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(a,u)}c((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(n)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(n=1,r&&(o=2&u[0]?r.return:u[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,u[1])).done)return o;switch(r=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,r=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],r=0}finally{n=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.input_mouse_position=t.input_mouse=t.input_key=t.input_create=void 0;var o={mouse:{locked:!1,x:-1,y:-1,buttons:[!1,!1,!1]},keyboard:{keys:[]}};t.input_create=function(e,t){e.oncontextmenu=function(e){return e.preventDefault()},e.onclick=function(){return function(e,t){t&&n(this,void 0,void 0,(function(){return r(this,(function(t){return[2,e.requestPointerLock()]}))}))}(e,t)},e.onmousedown=function(e){return function(e){o.mouse.buttons[e.button]=!0}(e)},e.onmouseup=function(e){return function(e){o.mouse.buttons[e.button]=!1}(e)},e.onmousemove=function(e){return function(e){o.mouse.x=e.clientX,o.mouse.y=e.clientY}(e)},document.body.onkeydown=function(e){return function(e){o.keyboard.keys.includes(e.key)||o.keyboard.keys.push(e.key)}(e)},document.body.onkeyup=function(e){return function(e){o.keyboard.keys.splice(o.keyboard.keys.indexOf(e.key),1)}(e)}},t.input_key=function(e){return o.keyboard.keys.includes(e)},t.input_mouse=function(e){return o.mouse.buttons[e]},t.input_mouse_position=function(){return[o.mouse.x,o.mouse.y]}}},t={};return function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r].call(i.exports,i,i.exports,n),i.exports}(156)})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,