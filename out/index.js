!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("MyLib",[],t):"object"==typeof exports?exports.MyLib=t():e.MyLib=t()}(self,(()=>(()=>{"use strict";var e={114:(e,t)=>{function r(e,t,r){e.width=t,e.height=r,e.style.width="".concat(t,"px"),e.style.height="".concat(r,"px")}Object.defineProperty(t,"__esModule",{value:!0}),t.canvas_create=t.canvas_resize=void 0,t.canvas_resize=r,t.canvas_create=function(e,t){void 0===e&&(e=300),void 0===t&&(t=150);var n=document.createElement("canvas");return r(n,e,t),n}},151:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.context_get_webgl2=void 0,t.context_get_webgl2=function(e){var t=e.getContext("webgl2");if(!t)throw new Error("Could not create webgl2 context");return t}},61:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function u(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,u)}c((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(r=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,n=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],n=0}finally{r=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.image_create=void 0,t.image_create=function(e){return r(this,void 0,void 0,(function(){return n(this,(function(t){return[2,new Promise((function(t){var r=new Image;r.onload=function(){return t(r)},r.src=e}))]}))}))}},524:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(114),t),o(r(151),t),o(r(61),t),o(r(675),t),o(r(920),t),o(r(655),t),o(r(522),t),o(r(69),t)},675:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function u(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,u)}c((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(r=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,n=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],n=0}finally{r=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};function o(e){return r(this,void 0,void 0,(function(){return n(this,(function(t){switch(t.label){case 0:return[4,fetch(e)];case 1:return[4,t.sent().text()];case 2:return[2,t.sent()]}}))}))}function i(e,t,r){var n=e.createShader(r);if(!n)throw new Error("Could not create shader of type: ".concat(r));if(e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS))throw new Error("".concat(e.getShaderInfoLog(n)));return n}Object.defineProperty(t,"__esModule",{value:!0}),t.program_uniform_location=t.program_create=void 0,t.program_create=function(e,t,a){return r(this,void 0,void 0,(function(){var r,u,c,f,l;return n(this,(function(n){switch(n.label){case 0:if(!(r=e.createProgram()))throw new Error("Could not create shader program");return[4,o(t)];case 1:return u=n.sent(),[4,o(a)];case 2:if(c=n.sent(),f=i(e,u,e.VERTEX_SHADER),l=i(e,c,e.FRAGMENT_SHADER),e.attachShader(r,f),e.attachShader(r,l),e.linkProgram(r),!e.getProgramParameter(r,e.LINK_STATUS))throw new Error("".concat(e.getProgramInfoLog(r)));return e.deleteShader(f),e.deleteShader(l),[2,r]}}))}))},t.program_uniform_location=function(e,t,r){var n=e.getUniformLocation(t,r);if(!n)throw new Error("Could not find uniform location for name: ".concat(r));return n}},920:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.spritesheet_create=void 0,t.spritesheet_create=function(e,t,r,n){for(var o=(void 0===n?{shrink:0}:n).shrink,i=[],a=0;a<t[0]/r[0]*(t[1]/r[1]);a++){var u=t[0]/r[0],c=a%u*r[0],f=Math.floor(a/u)*r[1];i.push.apply(i,[c/t[0]+o,f/t[1]+o,(c+r[0])/t[0]-o,f/t[1]+o,(c+r[0])/t[0]-o,(f+r[1])/t[1]-o,c/t[0]+o,(f+r[1])/t[1]-o])}return{texture:e,source_size:t,sprite_size:r,texcoords:i}}},655:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.texture_create=void 0,t.texture_create=function(e,t){var r=e.createTexture();if(!r)throw new Error("Could not create texture");e.bindTexture(e.TEXTURE_2D,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.generateMipmap(e.TEXTURE_2D);var n=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");if(n){var o=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT);e.texParameterf(e.TEXTURE_2D,n.TEXTURE_MAX_ANISOTROPY_EXT,o)}return e.bindTexture(e.TEXTURE_2D,null),r}},522:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vao_create=void 0,t.vao_create=function(e,t,r,n){var o=e.createVertexArray();if(!o)throw new Error("Could not create vertex array object");return e.bindVertexArray(o),e.useProgram(t),n.forEach((function(n){var o=n.buffer_index,i=n.location,a=n.size,u=n.stride,c=n.offset;e.bindBuffer(r[o][0],r[o][1]);var f=e.getAttribLocation(t,i);e.vertexAttribPointer(f,a,e.FLOAT,!1,u,c),e.enableVertexAttribArray(f)})),r.filter((function(t){return t[0]===e.ELEMENT_ARRAY_BUFFER})).forEach((function(t){e.bindBuffer(t[0],t[1])})),e.bindVertexArray(null),o}},69:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.vbo_create=void 0,t.vbo_create=function(e,t,r,n){void 0===n&&(n=WebGLRenderingContext.STATIC_DRAW);var o=e.createBuffer();if(!o)throw new Error("Could not create buffer");return e.bindBuffer(t,o),e.bufferData(t,r,n),[t,o]}},156:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.gg_engine_create=t.gl=t.canvas=void 0;var i=r(524),a=r(788);function u(e,t){(0,i.canvas_resize)(e,document.body.clientWidth,document.body.clientHeight),t.viewport(0,0,e.width,e.height)}o(r(524),t),o(r(788),t),t.canvas=(0,i.canvas_create)(),(0,a.input_create)(t.canvas,!1),t.gl=(0,i.context_get_webgl2)(t.canvas),window.onresize=function(){return u(t.canvas,t.gl)},u(t.canvas,t.gl),document.body.appendChild(t.canvas),t.gg_engine_create=function(e,r){var n=0,o=0;window.requestAnimationFrame((function i(a){window.requestAnimationFrame(i),e(),function(e){o++,e-n>1e3&&(console.log(o),o=0,n=e),t.gl.clearColor(0,0,1,1),t.gl.clear(t.gl.COLOR_BUFFER_BIT),r()}(a)}))}},788:function(e,t){var r=this&&this.__awaiter||function(e,t,r,n){return new(r||(r=Promise))((function(o,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function u(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,u)}c((n=n.apply(e,t||[])).next())}))},n=this&&this.__generator||function(e,t){var r,n,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(u){return function(c){return function(u){if(r)throw new TypeError("Generator is already executing.");for(;i&&(i=0,u[0]&&(a=0)),a;)try{if(r=1,n&&(o=2&u[0]?n.return:u[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,u[1])).done)return o;switch(n=0,o&&(u=[2&u[0],o.value]),u[0]){case 0:case 1:o=u;break;case 4:return a.label++,{value:u[1],done:!1};case 5:a.label++,n=u[1],u=[0];continue;case 7:u=a.ops.pop(),a.trys.pop();continue;default:if(!((o=(o=a.trys).length>0&&o[o.length-1])||6!==u[0]&&2!==u[0])){a=0;continue}if(3===u[0]&&(!o||u[1]>o[0]&&u[1]<o[3])){a.label=u[1];break}if(6===u[0]&&a.label<o[1]){a.label=o[1],o=u;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(u);break}o[2]&&a.ops.pop(),a.trys.pop();continue}u=t.call(e,a)}catch(e){u=[6,e],n=0}finally{r=o=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}([u,c])}}};Object.defineProperty(t,"__esModule",{value:!0}),t.input_mouse=t.input_key=t.input_create=void 0;var o={mouse:{locked:!1,x:-1,y:-1,buttons:[!1,!1,!1]},keyboard:{keys:[]}};t.input_create=function(e,t){e.oncontextmenu=function(e){return e.preventDefault()},e.onclick=function(){return function(e,t){t&&r(this,void 0,void 0,(function(){return n(this,(function(t){return[2,e.requestPointerLock()]}))}))}(e,t)},e.onmousedown=function(e){return function(e){o.mouse.buttons[e.button]=!0}(e)},e.onmouseup=function(e){return function(e){o.mouse.buttons[e.button]=!1}(e)},e.onmousemove=function(e){return function(e){o.mouse.x=e.clientX,o.mouse.y=e.clientY}(e)},document.body.onkeydown=function(e){return function(e){o.keyboard.keys.includes(e.key)||o.keyboard.keys.push(e.key)}(e)},document.body.onkeyup=function(e){return function(e){o.keyboard.keys.splice(o.keyboard.keys.indexOf(e.key),1)}(e)}},t.input_key=function(e){return o.keyboard.keys.includes(e)},t.input_mouse=function(e){return o.mouse.buttons[e]}}},t={};return function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}(156)})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,